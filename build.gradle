/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2018-2020 Andres Almiray.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'org.kordamp.gradle.groovy-project'
    id 'org.kordamp.gradle.bintray'
    id 'org.kordamp.gradle.plugin' apply false
}

if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = '**UNDEFINED**'
if (!project.hasProperty('bintrayApiKey'))   ext.bintrayApiKey   = '**UNDEFINED**'

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name          = rootProject.name
        vendor        = 'Kordamp'
        description   = 'A collection of opinionated Gradle plugins'
        inceptionYear = '2018'
        tags          = ['project', 'configuration']

        links {
            website      = "https://github.com/kordamp/${rootProject.name}"
            issueTracker = "https://github.com/kordamp/${rootProject.name}/issues"
            scm          = "https://github.com/kordamp/${rootProject.name}.git"
        }

        specification {
            enabled = false
        }

        implementation {
            enabled = false
        }

        people {
            person {
                id    = 'aalmiray'
                name  = 'Andres Almiray'
                url   = 'http://andresalmiray.com/'
                roles = ['developer']
                properties = [
                    twitter: 'aalmiray',
                    github : 'aalmiray'
                ]
            }
        }

        repositories {
            repository {
                name = 'localRelease'
                url  = "${project.rootProject.buildDir}/repos/local/release"
            }
            repository {
                name = 'localSnapshot'
                url  = "${project.rootProject.buildDir}/repos/local/snapshot"
            }
        }
    }

    docs {
        javadoc {
            enabled = false
        }

        groovydoc {
            enabled = true
            replaceJavadoc = true
            options {
                link 'https://docs.gradle.org/5.0/javadoc/', 'org.gradle.'
            }
        }
    }

    licensing {
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    publishing {
        signing             = false
        releasesRepository  = 'localRelease'
        snapshotsRepository = 'localSnapshot'
    }

    bintray {
        credentials {
            username = project.bintrayUsername
            password = project.bintrayApiKey
        }
        userOrg = 'kordamp'
        repo    = 'maven'
        name    = rootProject.name
    }
}

allprojects {
    apply plugin: 'idea'

    repositories {
        jcenter()
        gradlePluginPortal()
        flatDir { dir rootProject.file('libraries') }
    }

    dependencyUpdates.resolutionStrategy = {
        componentSelection { rules ->
            rules.all { selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }
}

subprojects {
    if (project.name.endsWith('-plugin')) {
        apply plugin: 'groovy'
        apply plugin: 'java-library'
        apply plugin: 'org.kordamp.gradle.plugin'

        config {
            info {
                description = project.project_description
            }

            bintray { enabled = true }

            plugin {
                enabled             = true
                id                  = project.pluginId
                implementationClass = project.pluginImplementationClass
            }
        }

        normalization {
            runtimeClasspath {
                ignore('/META-INF/MANIFEST.MF')
            }
        }

        dependencies {
            implementation gradleApi()

            testImplementation("org.spockframework:spock-core:$spockVersion") {
                exclude group: 'org.codehaus.groovy'
            }
        }

        compileGroovy {
            sourceCompatibility = project.sourceCompatibility
            targetCompatibility = project.targetCompatibility
        }
    }
}
